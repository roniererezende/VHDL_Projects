|Exercicio_1_RAM_9_2
clk_i => ram_s[0][0].CLK
clk_i => ram_s[0][1].CLK
clk_i => ram_s[0][2].CLK
clk_i => ram_s[0][3].CLK
clk_i => ram_s[0][4].CLK
clk_i => ram_s[0][5].CLK
clk_i => ram_s[0][6].CLK
clk_i => ram_s[0][7].CLK
clk_i => ram_s[1][0].CLK
clk_i => ram_s[1][1].CLK
clk_i => ram_s[1][2].CLK
clk_i => ram_s[1][3].CLK
clk_i => ram_s[1][4].CLK
clk_i => ram_s[1][5].CLK
clk_i => ram_s[1][6].CLK
clk_i => ram_s[1][7].CLK
clk_i => ram_s[2][0].CLK
clk_i => ram_s[2][1].CLK
clk_i => ram_s[2][2].CLK
clk_i => ram_s[2][3].CLK
clk_i => ram_s[2][4].CLK
clk_i => ram_s[2][5].CLK
clk_i => ram_s[2][6].CLK
clk_i => ram_s[2][7].CLK
clk_i => ram_s[3][0].CLK
clk_i => ram_s[3][1].CLK
clk_i => ram_s[3][2].CLK
clk_i => ram_s[3][3].CLK
clk_i => ram_s[3][4].CLK
clk_i => ram_s[3][5].CLK
clk_i => ram_s[3][6].CLK
clk_i => ram_s[3][7].CLK
clk_i => data_s[0].CLK
clk_i => data_s[1].CLK
clk_i => data_s[2].CLK
clk_i => data_s[3].CLK
clk_i => data_s[4].CLK
clk_i => data_s[5].CLK
clk_i => data_s[6].CLK
clk_i => data_s[7].CLK
clk_i => address_s[0].CLK
clk_i => address_s[1].CLK
clk_i => RAM_PLL:pll_instantiate.inclk0
rst_i => data_address_io.IN1
rst_i => data_input_process.IN0
en_W_R_i => data_input_process.IN1
en_W_R_i => data_input_process.IN0
en_Out_i => data_address_io.IN0
data_address_sel_i => data_address_io.IN1
data_address_sel_i => data_input_process.IN1
data_address_sel_i => data_input_process.IN1
data_address_sel_i => address_s[0].ENA
data_address_sel_i => address_s[1].ENA
data_address_io[0] <> data_address_io[0]
data_address_io[1] <> data_address_io[1]
data_address_io[2] <> data_address_io[2]
data_address_io[3] <> data_address_io[3]
data_address_io[4] <> data_address_io[4]
data_address_io[5] <> data_address_io[5]
data_address_io[6] <> data_address_io[6]
data_address_io[7] <> data_address_io[7]


|Exercicio_1_RAM_9_2|RAM_PLL:pll_instantiate
areset => altpll:altpll_component.areset
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]
locked <= altpll:altpll_component.locked


|Exercicio_1_RAM_9_2|RAM_PLL:pll_instantiate|altpll:altpll_component
inclk[0] => RAM_PLL_altpll:auto_generated.inclk[0]
inclk[1] => RAM_PLL_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => RAM_PLL_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= RAM_PLL_altpll:auto_generated.locked
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|Exercicio_1_RAM_9_2|RAM_PLL:pll_instantiate|altpll:altpll_component|RAM_PLL_altpll:auto_generated
areset => pll_lock_sync.ACLR
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
locked <= locked.DB_MAX_OUTPUT_PORT_TYPE


